name: Build & Publish Daily Podcast

on:
  workflow_dispatch:     # manual trigger
  schedule:
    - cron: "0 12 * * *" # runs daily at 12:00 UTC

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout repo
      - name: Checkout
        uses: actions/checkout@v3

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      # Install system dependencies
      - name: Install system deps
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg espeak-ng

      # Cache pip
      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # Install Python deps (your repo requirements + Piper)
      - name: Install Python deps
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install -r requirements.txt
          python3 -m pip install piper-tts

      # Download English voice
      - name: Download English voice
        run: |
          mkdir -p voices
          python3 -m piper.download_voices en_US-lessac-high --download-dir voices
          ls -R voices
          echo "PIPER_VOICE=$PWD/voices/en_US/lessac/high/en_US-lessac-high.onnx" >> $GITHUB_ENV
          echo "PIPER_BIN=$(which piper)" >> $GITHUB_ENV

      # Build podcast
      - name: Build Podcast
        env:
          GMAIL_CLIENT_ID: ${{ secrets.GMAIL_CLIENT_ID }}
          GMAIL_CLIENT_SECRET: ${{ secrets.GMAIL_CLIENT_SECRET }}
          GMAIL_REFRESH_TOKEN: ${{ secrets.GMAIL_REFRESH_TOKEN }}
          GMAIL_LABEL: ${{ secrets.GMAIL_LABEL }}
          PODCAST_TITLE: ${{ secrets.PODCAST_TITLE }}
          HOST_PUBLIC_BASE: ${{ secrets.HOST_PUBLIC_BASE }}
        run: |
          mkdir -p output
          PYTHONPATH=. python3 src/main.py \
            --piper "$PIPER_BIN" \
            --voice "$PIPER_VOICE" \
            --max_items 10

      # Upload artifacts for debugging (optional)
      - name: Upload outputs
        uses: actions/upload-artifact@v4
        with:
          name: podcast-output
          path: output/

      # (Optional) Create a GitHub Release with episode.mp3
      - name: Release episode
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "episode-${{ github.run_id }}"
          files: output/episode.mp3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
