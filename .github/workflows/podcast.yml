name: Build & Publish Daily Podcast

on:
  workflow_dispatch: {}                 # manual trigger
  schedule:
    - cron: "0 12 * * *"                # daily at 12:00 UTC (change as you like)

permissions:
  contents: write                       # needed for creating releases
  pages: write                          # needed for GitHub Pages deploy
  id-token: write                       # needed for Pages OIDC

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1) Checkout source
      - name: Checkout
        uses: actions/checkout@v4

      # 2) Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      # 3) System deps
      - name: Install system deps
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg espeak-ng

      # 4) Cache pip
      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # 5) Python deps (your reqs + piper + lxml_html_clean for readability)
      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          python -m pip install piper-tts
          python -m pip install lxml_html_clean

      # 6) Download Piper voice (male, medium)
      - name: Download Piper voice (en_US-hfc_male-medium)
        run: |
          mkdir -p voices
          python -m piper.download_voices en_US-hfc_male-medium --download-dir voices
          echo "PIPER_VOICE=$PWD/voices/en_US-hfc_male-medium.onnx" >> $GITHUB_ENV
          echo "PIPER_BIN=$(which piper)" >> $GITHUB_ENV

      # 7) Build podcast (script + TTS + notes.html)
      - name: Build Podcast
        env:
          GMAIL_CLIENT_ID: ${{ secrets.GMAIL_CLIENT_ID }}
          GMAIL_CLIENT_SECRET: ${{ secrets.GMAIL_CLIENT_SECRET }}
          GMAIL_REFRESH_TOKEN: ${{ secrets.GMAIL_REFRESH_TOKEN }}
          GMAIL_LABEL: ${{ secrets.GMAIL_LABEL }}
          PODCAST_TITLE: ${{ secrets.PODCAST_TITLE }}
          HOST_PUBLIC_BASE: ${{ secrets.HOST_PUBLIC_BASE }}
          LLM_PROVIDER: ${{ secrets.LLM_PROVIDER }}
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        run: |
          mkdir -p output
          PYTHONPATH=. python3 src/main.py \
            --piper "$PIPER_BIN" \
            --voice "$PIPER_VOICE" \
            --prompt_file prompts/host_style.txt \
            --llm_full_text

      # 8) Upload build outputs (handy for debugging / downloads)
      - name: Upload outputs
        uses: actions/upload-artifact@v4
        with:
          name: podcast-output
          path: output/

      # 9) Create GitHub Release with the MP3
      - name: Create GitHub Release with MP3
        id: release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "episode-${{ github.run_id }}"
          files: output/episode.mp3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 10) Update RSS feed (title = "Month Day Year", description = notes.html)
      - name: Update RSS feed
        env:
          GITHUB_REPOSITORY:   ${{ github.repository }}
          PODCAST_TITLE:       ${{ secrets.PODCAST_TITLE }}
          PODCAST_COVER_URL:   ${{ secrets.PODCAST_COVER_URL }}
          PODCAST_OWNER_NAME:  ${{ secrets.PODCAST_OWNER_NAME }}
          PODCAST_OWNER_EMAIL: ${{ secrets.PODCAST_OWNER_EMAIL }}
          PODCAST_AUTHOR:      ${{ secrets.PODCAST_AUTHOR }}
          PODCAST_CATEGORY:    ${{ secrets.PODCAST_CATEGORY }}
          PODCAST_LANG:        ${{ secrets.PODCAST_LANG }}
        run: |
          python -m src.feed --update --tag "episode-${{ github.run_id }}"

      # 11) Publish feed.xml to GitHub Pages
      - name: Prepare feed for Pages
        run: |
          mkdir -p public
          cp feed.xml public/

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: public

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4